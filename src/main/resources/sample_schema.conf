group connectionDetails {
    ## Deadline for connecting to the server specified in ms
    connectTimeout ms:Int [once];

    ## Deadline for the server to respond to a request specified in ms
    requestTimeout ms:Int [once];

    ## Enable gzip compression
    compression enabled:Bool [once];
}

## Block that defines all defaults used by servers, virtual hosts, and destinations
defaults [once] {
    use connectionDetails;
}

## Destinations are named servers whose settings may vary
destination name:String {
    ## Address for the server behind connecting to
    server address:String [once];

    use connectionDetails;
}

## Defines a server that may have one or more virtual hosts defined within it.
##
## The default virtual host for a server should be named `*`.
##
## Examples:
##
## - ```
##   server :9000 {
##     host www.foobar.com {
##       ...
##     }
##   }
##   ```
## - ```
##   server 127.0.0.1:8080 {
##     host * {
##       ...
##     }
##   }
##   ```
##
server interface:String {

    ## Defines a virtual host for a given server
    ##
    host name:String {
        ## Alternative name for this virtual host
        alias name:String;

        ## Path to the document root for this virtual host
        root path:String [once];

        ## Define a route for this virtual host and map it to a destination.
        ##
        ## The destination specified must exist or the configuration will be invalid.
        ##
        ## Examples:
        ##
        ## - ```
        ##   route /foo/bar my_destination;
        ##   ```
        ## - ```
        ##   route /baz/:segment/foo other_destination;
        ##   ```
        ## - ```
        ##   route exact~/baz my_destination;
        ##   ```
        ## - ```
        ##   route regexp~^/foo/[^/]+ other_destination;
        ##   ```
        route path:String destination:String;

        ## Define a route for this virtual host and allow

        ## The destination specified must exist or the configuration will be invalid.
        ##
        ## Examples:
        ##
        ## - ```
        ##   route /foo/bar {
        ##     destination my_destination;
        ##     scheme https;
        ##   }
        ##   ```
        route path:String {

            ## Destination used for this route.
            ##
            ## Examples:
            ##
            ## - `destination my_destination;`
            destination name:String [once];

            ## Scheme enforced for requests matching this route
            ##
            ## Examples:
            ##
            ## - `scheme https;`
            ## - `scheme http;`
            ## - `scheme any;`
            scheme scheme:String;
        }

        ## Register a filter for all requests bound for this virtual host and
        ## specify whether it should be enabled by default
        ##
        ## The filter specified must exist or the configuration will be invalid.
        ##
        filter name:String enabled:Bool;

        ## Cross-origin resource sharing settings
        cors [once] {
            ## Allow the named origin named to make cross-origin requests to
            ## this virtual host
            allowOrigin name:String;
        }

    }
}
